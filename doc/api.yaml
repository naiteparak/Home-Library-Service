openapi: 3.0.0
paths:
  "/user":
    get:
      operationId: UsersController_findAll
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - Users
    post:
      operationId: UsersController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateUserDto"
      responses:
        '201':
          description: ''
      tags:
        - Users
  "/user/{id}":
    get:
      operationId: UsersController_findOne
      parameters:
        - name: id
          required: true
          in: path
          example: a90954e0-dc5b-4f0b-bb85-c69cf0a7deb1
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - Users
    put:
      operationId: UsersController_update
      parameters:
        - name: id
          required: true
          in: path
          example: a90954e0-dc5b-4f0b-bb85-c69cf0a7deb1
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdatePasswordDto"
      responses:
        '200':
          description: ''
      tags:
        - Users
    delete:
      operationId: UsersController_delete
      parameters:
        - name: id
          required: true
          in: path
          example: a90954e0-dc5b-4f0b-bb85-c69cf0a7deb1
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - Users
  "/artist":
    get:
      operationId: ArtistsController_findAll
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - Artists
    post:
      operationId: ArtistsController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateArtistDto"
      responses:
        '201':
          description: ''
      tags:
        - Artists
  "/artist/{id}":
    get:
      operationId: ArtistsController_findOne
      parameters:
        - name: id
          required: true
          in: path
          example: a90954e0-dc5b-4f0b-bb85-c69cf0a7deb1
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - Artists
    put:
      operationId: ArtistsController_update
      parameters:
        - name: id
          required: true
          in: path
          example: a90954e0-dc5b-4f0b-bb85-c69cf0a7deb1
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateArtistDto"
      responses:
        '200':
          description: ''
      tags:
        - Artists
    delete:
      operationId: ArtistsController_delete
      parameters:
        - name: id
          required: true
          in: path
          example: a90954e0-dc5b-4f0b-bb85-c69cf0a7deb1
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - Artists
  "/album":
    get:
      operationId: AlbumsController_findAll
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - Albums
    post:
      operationId: AlbumsController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateAlbumDto"
      responses:
        '201':
          description: ''
      tags:
        - Albums
  "/album/{id}":
    get:
      operationId: AlbumsController_findOne
      parameters:
        - name: id
          required: true
          in: path
          example: a90954e0-dc5b-4f0b-bb85-c69cf0a7deb1
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - Albums
    put:
      operationId: AlbumsController_update
      parameters:
        - name: id
          required: true
          in: path
          example: a90954e0-dc5b-4f0b-bb85-c69cf0a7deb1
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateAlbumDto"
      responses:
        '200':
          description: ''
      tags:
        - Albums
    delete:
      operationId: AlbumsController_delete
      parameters:
        - name: id
          required: true
          in: path
          example: a90954e0-dc5b-4f0b-bb85-c69cf0a7deb1
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - Albums
info:
  title: Library service
  description: The library API description
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  schemas:
    CreateUserDto:
      type: object
      properties:
        login:
          type: string
          example: Cathryn.McCullough19
        password:
          type: string
          example: password
      required:
        - login
        - password
    UpdatePasswordDto:
      type: object
      properties:
        oldPassword:
          type: string
          example: password
        newPassword:
          type: string
          example: PVLyix5BYjQ9kA6
      required:
        - oldPassword
        - newPassword
    CreateArtistDto:
      type: object
      properties:
        name:
          type: string
          example: Krystal VonRueden
        grammy:
          type: boolean
          example: true
      required:
        - name
        - grammy
    UpdateArtistDto:
      type: object
      properties:
        name:
          type: string
          example: Krystal VonRueden
        grammy:
          type: boolean
          example: true
      required:
        - name
        - grammy
    CreateAlbumDto:
      type: object
      properties:
        artistId:
          type: string
          example: 92f6a22e-58c3-40dc-9f49-ce62f23edc65
        name:
          type: string
          example: Fame
        year:
          type: number
          example: 2022
      required:
        - artistId
        - name
        - year
    UpdateAlbumDto:
      type: object
      properties:
        name:
          type: string
          example: Strawberry Fields Forever
        year:
          type: number
          example: 2022
      required:
        - name
        - year
